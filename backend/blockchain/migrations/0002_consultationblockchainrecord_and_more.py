# Generated by Django 5.0.8 on 2025-09-26 05:13

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("blockchain", "0001_initial"),
        ("consultations", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ConsultationBlockchainRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("consultation_hash", models.CharField(max_length=64, unique=True)),
                ("symptoms_hash", models.CharField(max_length=64)),
                ("ai_response_hash", models.CharField(max_length=64)),
                ("stored_on_blockchain", models.BooleanField(default=False)),
                ("encryption_key_hash", models.CharField(max_length=64)),
                ("encrypted", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "blockchain_transaction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="blockchain.blockchaintransaction",
                    ),
                ),
                (
                    "consultation",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blockchain_record",
                        to="consultations.consultation",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consultation_blockchain_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HealthcareProviderAccess",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "access_level",
                    models.CharField(
                        choices=[
                            ("read_only", "Read Only"),
                            ("read_write", "Read and Write"),
                            ("full_access", "Full Access"),
                        ],
                        default="read_only",
                        max_length=15,
                    ),
                ),
                (
                    "access_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Patient Approval"),
                            ("approved", "Approved by Patient"),
                            ("denied", "Denied by Patient"),
                            ("revoked", "Revoked by Patient"),
                            ("expired", "Access Expired"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                (
                    "purpose",
                    models.TextField(
                        help_text="Medical purpose for accessing this consultation"
                    ),
                ),
                ("granted_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField()),
                ("revoked_at", models.DateTimeField(blank=True, null=True)),
                ("access_grant_hash", models.CharField(blank=True, max_length=64)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "blockchain_transaction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="provider_access_grants",
                        to="blockchain.blockchaintransaction",
                    ),
                ),
                (
                    "consultation_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="provider_accesses",
                        to="blockchain.consultationblockchainrecord",
                    ),
                ),
                (
                    "healthcare_provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="provider_accesses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="granted_provider_accesses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConsultationAccessLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "access_type",
                    models.CharField(
                        choices=[
                            ("patient", "Patient Access"),
                            ("healthcare_provider", "Healthcare Provider Access"),
                            ("emergency", "Emergency Access"),
                            ("research", "Research Access"),
                        ],
                        max_length=20,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                ("access_verified_on_blockchain", models.BooleanField(default=False)),
                (
                    "accessed_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "accessed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consultation_accesses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "blockchain_transaction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="access_logs",
                        to="blockchain.blockchaintransaction",
                    ),
                ),
                (
                    "consultation_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="access_logs",
                        to="blockchain.consultationblockchainrecord",
                    ),
                ),
                (
                    "provider_access",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="blockchain.healthcareprovideraccess",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="consultationblockchainrecord",
            index=models.Index(
                fields=["consultation_hash"], name="blockchain__consult_ba4f7c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="consultationblockchainrecord",
            index=models.Index(
                fields=["patient"], name="blockchain__patient_b65e9e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="consultationblockchainrecord",
            index=models.Index(
                fields=["stored_on_blockchain"], name="blockchain__stored__0141ea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="healthcareprovideraccess",
            index=models.Index(
                fields=["patient", "access_status"],
                name="blockchain__patient_d2fb26_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="healthcareprovideraccess",
            index=models.Index(
                fields=["healthcare_provider", "access_status"],
                name="blockchain__healthc_7f87c0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="healthcareprovideraccess",
            index=models.Index(
                fields=["access_grant_hash"], name="blockchain__access__dd954a_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="healthcareprovideraccess",
            unique_together={("patient", "healthcare_provider", "consultation_record")},
        ),
        migrations.AddIndex(
            model_name="consultationaccesslog",
            index=models.Index(
                fields=["consultation_record", "accessed_at"],
                name="blockchain__consult_8eb34f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="consultationaccesslog",
            index=models.Index(
                fields=["accessed_by", "accessed_at"],
                name="blockchain__accesse_632935_idx",
            ),
        ),
    ]
