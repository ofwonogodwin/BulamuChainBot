# Generated by Django 4.2.7 on 2025-09-24 09:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consultation_type', models.CharField(choices=[('text', 'Text Consultation'), ('voice', 'Voice Consultation')], default='text', max_length=10)),
                ('language', models.CharField(choices=[('en', 'English'), ('lg', 'Luganda')], default='en', max_length=2)),
                ('symptoms_text', models.TextField()),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='consultations/audio/')),
                ('ai_response', models.TextField()),
                ('severity_score', models.IntegerField(blank=True, choices=[(1, 'Very Low'), (2, 'Low'), (3, 'Mild'), (4, 'Moderate Low'), (5, 'Moderate'), (6, 'Moderate High'), (7, 'High'), (8, 'Severe'), (9, 'Very Severe'), (10, 'Critical Emergency')], null=True)),
                ('emergency_detected', models.BooleanField(default=False)),
                ('recommended_actions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consultation',
                'verbose_name_plural': 'Consultations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_level', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('critical', 'Critical Emergency')], max_length=10)),
                ('symptoms_detected', models.TextField()),
                ('ai_recommendation', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved')], default='pending', max_length=15)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_alerts', to='consultations.consultation')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('assistant', 'AI Assistant'), ('system', 'System Message')], max_length=10)),
                ('content', models.TextField()),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='consultations/messages/audio/')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='consultations.consultation')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
    ]
